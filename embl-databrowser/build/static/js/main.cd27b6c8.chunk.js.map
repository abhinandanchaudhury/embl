{"version":3,"sources":["api/Api.js","components/Select.js","components/Input.js","aminodictionary.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","timeout","headers","Content-Type","Select","option","i","react_default","a","createElement","value","name","key","display_name","options","_this","this","map","getOptionTag","props","grouping","getOptgroupTags","getOptionTags","groups","propsGroup","_this2","group","t","children","label","getOptions","Object","assign","className","defaultValue","selected","placeholder","Component","defaultProps","Input","AminoAcids","shortCode","letterCode","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","selectedSpecis","geneSymbol","transcriptIds","state","species","isLoading","error","errorMsg","errorMsgHgsv","isTextChanged","selectedSpecies","selectedGeneSymbol","selectedProteinSequence","selectedAminoAcidLetter","geneStableIdentifier","selectedHgvs","isValidHgvs","hgvsTranscriptIds","getAllData","bind","assertThisInitialized","getHgvs","selectSpecies","returnErrorMsg","setState","API","get","then","res","speciesData","groupSpeciesData","data","sortArrayByGroup","catch","arr","sort","b","textA","toUpperCase","textB","reduce","r","e","push","values","target","_this$setState","defineProperty","trim","_this$setState2","preventDefault","hgvsVal","validateHgvs","spilttedHgvsVal","split","spilttedHgvsValArr","length","aminoValPos","slice","startAminoAcid","aminoacidletterCode","filter","validateHgvsPosition","concat","response","status","n","filteredArr","transcript_consequences","biotype","undefined","protein_start","parseInt","amino_acids","indexOf","test","_this$state","event","checkAllMandatory","stableIdentifierResponse","id","sequenceIdentifier","returnArr","seq","_this3","_context","t0","t1","txt","datas","tblData","url","transcript_id","href","rel","title","_this$state2","action","htmlFor","components_Select","onChange","components_Input","type","onKeyUp","maxLength","onClick","getData","generateTable","generateHgsvTable","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cd27b6c8.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: `http://rest.ensembl.org/`,\r\n  timeout: 20000,\r\n  headers: {'Content-Type': 'application/json'}\r\n});","import React, { Component } from 'react';\r\n\r\nclass Select extends Component {\r\n    getOptionTag(option, i) {\r\n        return (\r\n          <option value={option.name} key={i}>{option.display_name} [ {option.name} ]</option>\r\n        );\r\n    }\r\n\r\n    getOptionTags(options) {\r\n        return options.map((option, i) => {\r\n          return this.getOptionTag(option, i);\r\n        });\r\n    }\r\n\r\n    getOptions() {\r\n        var options = this.props.options;\r\n        if (this.props.grouping) {\r\n          return this.getOptgroupTags(options, this.props.grouping);\r\n        } else {\r\n          return this.getOptionTags(options);\r\n        }\r\n    }\r\n    getOptgroupTags(groups, propsGroup) {\r\n        var optgroups = groups.map((group, t) => {\r\n          var children = this.getOptionTags(group[propsGroup]);\r\n          return (\r\n            <optgroup key={t} label={group.group}>\r\n              {children}\r\n            </optgroup>\r\n          );\r\n    });\r\n    return optgroups;\r\n    }\r\n\r\n    render() {\r\n        var options = this.getOptions();\r\n        return (\r\n          <select className=\"form-control\" defaultValue={this.props.selected} {...this.props} >\r\n            <option>{this.props.placeholder}</option>\r\n            {options}\r\n          </select>\r\n        );\r\n    }\r\n}\r\nSelect.defaultProps = {\r\n      options: [],\r\n      grouping: null,\r\n      selected: null\r\n}\r\n\r\nexport default Select;","import React, { Component } from 'react';\r\n\r\nclass Input extends Component {\r\n    render() {\r\n            return (\r\n              <input {...this.props} />\r\n            );\r\n    }\r\n};\r\n\r\nexport default Input;","export const AminoAcids =[\r\n{\r\n  \"name\": \"Alanine\",\r\n  \"shortCode\": \"Ala\",\r\n  \"letterCode\": \"A\"\r\n},\r\n{\r\n  \"name\": \"Cysteine\",\r\n  \"shortCode\": \"Cys\",\r\n  \"letterCode\": \"C\"\r\n},\r\n{\r\n\"name\": \"Aspartic Acid\",\r\n\"shortCode\": \"Asp\",\r\n\"letterCode\": \"D\"\r\n},\r\n{\r\n\"name\": \"Glutamic Acid\",\r\n\"shortCode\": \"Glu\",\r\n\"letterCode\": \"E\"\r\n},\r\n{\r\n\"name\": \"Phenylalanine\",\r\n\"shortCode\": \"Phe\",\r\n\"letterCode\": \"F\"\r\n},\r\n{\r\n\"name\": \"Glycine\",\r\n\"shortCode\": \"Gly\",\r\n\"letterCode\": \"G\"\r\n},\r\n{\r\n\"name\": \"Histidine\",\r\n\"shortCode\": \"His\",\r\n\"letterCode\": \"H\"\r\n},\r\n{\r\n\"name\": \"Isoleucine\",\r\n\"shortCode\": \"Ile\",\r\n\"letterCode\": \"I\"\r\n},\r\n{\r\n\"name\": \"Lysine\",\r\n\"shortCode\": \"Lys\",\r\n\"letterCode\": \"K\"\r\n},\r\n{\r\n\"name\": \"Leucine\",\r\n\"shortCode\": \"Leu\",\r\n\"letterCode\": \"L\"\r\n},\r\n{\r\n\"name\": \"Methionine\",\r\n\"shortCode\": \"Met\",\r\n\"letterCode\": \"M\"\r\n},\r\n{\r\n\"name\": \"Asparagine\",\r\n\"shortCode\": \"Asn\",\r\n\"letterCode\": \"N\"\r\n},\r\n{\r\n\"name\": \"Proline\",\r\n\"shortCode\": \"Pro\",\r\n\"letterCode\": \"P\"\r\n},\r\n{\r\n\"name\": \"Glutamine\",\r\n\"shortCode\": \"Gln\",\r\n\"letterCode\": \"Q\"\r\n},\r\n{\r\n\"name\": \"Arginine\",\r\n\"shortCode\": \"Arg\",\r\n\"letterCode\": \"R\"\r\n},\r\n{\r\n\"name\": \"Serine\",\r\n\"shortCode\": \"Ser\",\r\n\"letterCode\": \"S\"\r\n},\r\n{\r\n\"name\": \"Threonine\",\r\n\"shortCode\": \"Thr\",\r\n\"letterCode\": \"T\"\r\n},\r\n{\r\n\"name\": \"Valine\",\r\n\"shortCode\": \"Val\",\r\n\"letterCode\": \"V\"\r\n},\r\n{\r\n\"name\": \"Tryptophan\",\r\n\"shortCode\": \"Trp\",\r\n\"letterCode\": \"W\"\r\n},\r\n{\r\n\"name\": \"Tyrosine\",\r\n\"shortCode\": \"Tyr\",\r\n\"letterCode\": \"Y\"\r\n}\r\n];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport API from './api/Api';\nimport Select from './components/Select';\nimport Input from './components/Input';\nimport { AminoAcids } from './aminodictionary';\n\nclass App extends Component {\n  constructor(props) {\n          super(props);\n          this.selectedSpecis = '';\n          this.geneSymbol = '';\n          this.transcriptIds = [];\n          this.state= {\n              species: [],\n              isLoading: false,\n              error: false,\n              errorMsg: '',\n              errorMsgHgsv: '',\n              isTextChanged: false,\n              selectedSpecies: null,\n              selectedGeneSymbol: '',\n              selectedProteinSequence: '',\n              selectedAminoAcidLetter: '',\n              geneStableIdentifier: '',\n              selectedHgvs: '',\n              transcriptIds: [],\n              isValidHgvs: false,\n              hgvsTranscriptIds: []\n          };\n          this.getAllData = this.getAllData.bind(this);\n          this.getHgvs = this.getHgvs.bind(this);\n          this.selectSpecies = this.selectSpecies.bind(this);\n          this.returnErrorMsg = this.returnErrorMsg.bind(this);\n      }\n  componentDidMount() {\n      this.setState({isLoading: true});\n      API.get('info/species')\n      .then(res => {\n        const speciesData = this.groupSpeciesData(res.data.species);\n        const data = this.sortArrayByGroup(speciesData);\n        this.setState({\n          species: data,\n          isLoading: false\n        });\n      }).catch(error => this.setState({\n          error,\n          isLoading: false\n      }));\n  }\n\n  sortArrayByGroup(arr) {\n    let result = arr.sort(function(a, b) {\n        var textA = a.group.toUpperCase();\n        var textB = b.group.toUpperCase();\n        return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n    });\n    return result;\n  }\n\n  groupSpeciesData(species) {\n    let data = species.reduce((r, e) => {\n        let group = e.display_name[0].toUpperCase();\n        if(!r[group]) r[group] = {group, children: [e]};\n        else r[group].children.push(e);\n        return r;\n    },{});\n    let result = Object.values(data);\n    return result;\n  }\n\n  selectSpecies(e){\n   this.selectedSpecies = e.target.value;\n   this.setState({\n    selectedSpecies: this.selectedSpecies,\n    isTextChanged: true,\n    errorMsg: ''\n   });\n  }\n   getAllData(e) {\n    this.setState({\n      [e.target.name] : e.target.value.trim().toUpperCase(),\n      isTextChanged: true,\n      errorMsg: ''\n    });\n   }\n\n  getHgvs(e) {\n    e.preventDefault();\n    const hgvsVal = e.target.value.trim();\n    this.setState({\n        [e.target.name] : hgvsVal,\n        isValidHgvs: false,\n        errorMsgHgsv: '',\n        hgvsTranscriptIds: []\n    });\n    let isValid = this.validateHgvs(hgvsVal);\n\n    if (isValid) {\n        this.setState({isValidHgvs: true, errorMsgHgsv: '' });\n        let spilttedHgvsVal = hgvsVal.split('.');\n        let spilttedHgvsValArr = spilttedHgvsVal[spilttedHgvsVal.length - 1];\n        var aminoValPos = spilttedHgvsValArr.slice(3, spilttedHgvsValArr.length - 3);\n        var startAminoAcid = spilttedHgvsValArr.slice(0, 3);\n        let aminoacidletterCode = AminoAcids.filter((data) => {\n            return data.shortCode === startAminoAcid;\n        });\n        if(aminoacidletterCode && aminoacidletterCode !== null) {\n            this.validateHgvsPosition(hgvsVal, aminoValPos, aminoacidletterCode[0].letterCode);\n        }\n    } else {\n        this.setState({errorMsgHgsv: 'Please enter valid Hgvs'});\n    }\n  }\n\n  validateHgvsPosition(selectedHgvs, aminoValPos, aminoacidletterCode) {\n        const _this = this;\n        API.get(`vep/human/hgvs/${selectedHgvs}?content-type=application/json`).then(function (response) {\n           // handle success\n          if(response.status === 200) {\n            response.data.map((n, i) => {\n                const filteredArr =  n.transcript_consequences.filter((data) => {\n                    return ((data.biotype === 'protein_coding' && data.protein_start !== undefined) && data.protein_start === parseInt(aminoValPos) && data.amino_acids.indexOf(aminoacidletterCode) === 0); // data.amino_acids.indexOf(aminoacidletterCode) === 0 belongs to first letter\n                });\n                _this.setState({hgvsTranscriptIds: filteredArr, errorMsgHgsv: ''});\n                return filteredArr;\n            });\n          }\n        })\n        .catch(function (error) {\n          _this.setState({errorMsgHgsv: error.response.data.error})\n          return;\n        });\n  }\n  validateHgvs(selectedHgvs) {\n    let re = /^[A-Z]{4,}[0-9]+[.][0-9]+[:][p][.][ARNDCQEGHILKMFPSTWYV][a-z]{2}[0-9]+[ARNDCQEGHILKMFPSTWYV][a-z]{2}/g; // https://regexr.com/\n    return re.test(selectedHgvs);\n  }\n  checkAllMandatory() {\n    const { selectedSpecies, selectedGeneSymbol, selectedProteinSequence, selectedAminoAcidLetter } = this.state;\n    if (selectedSpecies!== null && selectedGeneSymbol !== '' && selectedProteinSequence !== '' && selectedAminoAcidLetter !== '') {\n       this.setState({error: false, errorMsg: ''});\n       return true;\n    }\n    this.setState({error: true, errorMsg: 'Please fill all fields', isTextChanged: false});\n    return false;\n  }\n  async getData(event) {\n    event.preventDefault();\n    const isAllFilled = this.checkAllMandatory();\n    if(isAllFilled) {\n        this.setState({isLoading: true, isTextChanged: true});\n        try {\n            const stableIdentifierResponse = await API.get(`lookup/symbol/${this.state.selectedSpecies}/${this.state.selectedGeneSymbol}.json?;expand=1`);\n            this.setState({geneStableIdentifier: stableIdentifierResponse.data.id, error: false});\n            try{\n                let sequenceIdentifier = await API.get(`sequence/id/${this.state.geneStableIdentifier}?multiple_sequences=${this.state.selectedProteinSequence};type=protein;content-type=application/json`);\n                const returnArr = sequenceIdentifier.data.filter((data) => {\n                   return (data.seq.indexOf(this.state.selectedAminoAcidLetter) !== -1);\n                });\n                if(returnArr.length !== 0){\n                    this.setState({ isLoading: false, transcriptIds: returnArr, error: false, isTextChanged: false});\n                } else {\n                    this.setState({ isLoading: false, transcriptIds: returnArr, error: true, isTextChanged: false, errorMsg: 'The amino acid letter doesnot exist'});\n                }\n                return;\n            } catch(error) {\n                this.setState({isLoading: false, error: true, errorMsg: error.response.data.error, isTextChanged: false});\n            }\n            return stableIdentifierResponse;\n        } catch(error) {\n            this.setState({isLoading: false, error: true, errorMsg: error.response.data.error, isTextChanged: false});\n        }\n    }\n  }\n  returnErrorMsg(txt) {\n    return (<div className=\"alert alert-danger\">{txt}</div>)\n  }\n  generateHgsvTable(datas) {\n    let tblData = datas.map((data,i) =>{\n            let url = `http://www.ensembl.org/id/${data.transcript_id}`;\n\n            return (<tr key={i}><td><a href={url} className='card-link' rel='noopener noreferrer' title={`Click here to open the details of the transcript ${data.transcript_id}`}  target='_blank'>{data.transcript_id}</a></td></tr>);\n    });\n    return (<div className='card mt-3'><div className='card-header'>Transcript ID for <span className='font-weight-bold'>{this.state.selectedHgvs}</span></div><div className='card-body'><div className=\"table-responsive\"><table className='table table-striped table-bordered table-hover'><thead><tr><td>Transcript ID</td></tr></thead><tbody>{tblData}</tbody></table></div></div></div>);\n  }\n  generateTable(datas) {\n    let tblData = datas.map((data,i) =>{\n        let url = `http://www.ensembl.org/id/${data.id}`;\n\n        return (<tr key={i}><td><a href={url} className='card-link' rel='noopener noreferrer' title={`Click here to open the details of the transcript ${data.id}`}  target='_blank'>{data.id}</a></td></tr>);\n    });\n    return (<div className='card mt-3'><div className='card-header'>Transcript ID for <span className='font-weight-bold'>{this.state.selectedSpecies}</span> with Gene Symbol <span className='font-weight-bold'>{this.state.selectedGeneSymbol}</span> with amino acid letter <span className='font-weight-bold'>{this.state.selectedAminoAcidLetter}</span> at the position <span className='font-weight-bold'>{this.state.selectedProteinSequence}</span></div><div className='card-body'><div className=\"table-responsive\"><table className='table table-striped table-bordered table-hover'><thead><tr><td>Transcript ID</td></tr></thead><tbody>{tblData}</tbody></table></div></div></div>);\n  }\n\n  render() {\n    const {species, isLoading, selectedSpecies} = this.state;\n    if(isLoading) {\n        return (<div className=\"loader-header\"><div className=\"loader\" /></div>);\n    }\n    return (\n      <div className=\"App container-fluid mb-3 mt-3\">\n          <form action=\"#\" className=\"form-horizontal\">\n              <div className=\"form-group row\">\n                <div className=\"col\">\n                    <label htmlFor=\"species\" className=\"col-form-label font-weight-bold\">Select Species:</label>\n                    <Select id=\"species\" options={species} grouping={'children'} placeholder={'Please select the species'} selected={selectedSpecies} onChange={this.selectSpecies} />\n                </div>\n                <div className=\"col\">\n                    <label htmlFor=\"gene\" className=\"col-form-label font-weight-bold\">Gene Symbol:</label>\n                    <Input id=\"gene\" className=\"form-control text-uppercase\" value={this.state.selectedGeneSymbol} type=\"text\" placeholder=\"Enter Gene Symbol\" name=\"selectedGeneSymbol\" onKeyUp={this.getAllData} onChange={this.getAllData} />\n                </div>\n                <div className=\"col\">\n                    <label htmlFor=\"proteinSequence\" className=\"col-form-label font-weight-bold\">Protein Sequence Number:</label>\n                    <Input id=\"proteinSequence\" className=\"form-control\" value={this.state.selectedProteinSequence} type=\"number\" name=\"selectedProteinSequence\" placeholder=\"Enter Protein Sequence Number\" onKeyUp={this.getAllData} onChange={this.getAllData} />\n                </div>\n                <div className=\"col\">\n                    <label htmlFor=\"aminoAcidLetter\" className=\"col-form-label font-weight-bold\">Amino Acid Letter:</label>\n                    <Input id=\"aminoAcidLetter\" className=\"form-control text-uppercase\" value={this.state.selectedAminoAcidLetter} type=\"text\" maxLength=\"1\" name=\"selectedAminoAcidLetter\" placeholder=\"Enter an Amino Acid Letter\" onKeyUp={this.getAllData} onChange={this.getAllData} />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col float-right\">\n                    <Input type=\"submit\" className=\"btn btn-primary mb-2 float-right\" value=\"Submit\" onClick={this.getData.bind(this)} />\n                </div>\n              </div>\n          </form>\n          {this.state.transcriptIds.length !== 0 && !this.state.error && !this.state.isTextChanged && this.state.errorMsg === '' ? this.generateTable(this.state.transcriptIds) : (this.state.error && !this.state.isTextChanged) ? this.returnErrorMsg(this.state.errorMsg) : null}\n          <form action=\"#\" className=\"form-horizontal mt-3\">\n            <div className=\"form-group row\">\n                <label htmlFor=\"hgsv\" className=\"col-sm-2 col-form-label font-weight-bold\">HGVS:</label>\n                <div className=\"col-sm-10\">\n                    <Input id=\"hgsv\" className=\"form-control\" value={this.state.selectedHgvs} type=\"text\" name=\"selectedHgvs\" placeholder=\"Enter HGVS\" onChange={this.getHgvs} />\n                </div>\n            </div>\n          </form>\n          {this.state.isValidHgvs && this.state.hgvsTranscriptIds.length !== 0 && this.state.errorMsgHgsv === '' ? this.generateHgsvTable(this.state.hgvsTranscriptIds) : (this.state.errorMsgHgsv !== '') ? this.returnErrorMsg(this.state.errorMsgHgsv) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}